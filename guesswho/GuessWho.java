package arjun.guesswho;

import java.io.File;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Arjun
 */
public class GuessWho extends javax.swing.JFrame {

    private String m_sFileName = "";
    private int m_nLinesInFile = 0;
    private char[] m_Display;
    private String m_WhoWhat = "";
    private int m_nTries = 0;
    private int m_nClosed = 0;

    /**
     * Creates new form GuessWho
     */
    public GuessWho() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DataFileChooser = new javax.swing.JFileChooser();
        OpenFileButton = new javax.swing.JButton();
        NewPuzzleButton = new javax.swing.JButton();
        OKButton = new javax.swing.JButton();
        InputTextBox = new javax.swing.JTextField();
        OutputLabel = new javax.swing.JLabel();
        HintLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUESS WHO ?");

        OpenFileButton.setText("Open File");
        OpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileButtonActionPerformed(evt);
            }
        });

        NewPuzzleButton.setText("New Puzzle");
        NewPuzzleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPuzzleButtonActionPerformed(evt);
            }
        });

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter A Letter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OutputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(OpenFileButton)
                        .addGap(141, 141, 141)
                        .addComponent(NewPuzzleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(InputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(OKButton)))))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(HintLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenFileButton)
                    .addComponent(NewPuzzleButton)
                    .addComponent(OKButton)
                    .addComponent(InputTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(115, Short.MAX_VALUE)
                    .addComponent(HintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(58, 58, 58)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int getNumberofLinesInFile() {
        try (Scanner scanner = new Scanner(new File(m_sFileName))) {
            int count = 0;
            while (scanner.hasNextLine()) {
                scanner.nextLine();
                count++;
            }
            scanner.close();
            return count;
        } catch (Exception e) {
            return 0;
        }
    }

    private String getRandomLineFromFile() {
        try (Scanner scanner = new Scanner(new File(m_sFileName))) {
            String line = "";
            int random = (int) (Math.random() * m_nLinesInFile);
            while (random-- >= 0) {
                line = scanner.nextLine();
            }
            scanner.close();
            return line;
        } catch (Exception e) {
            return null;
        }
    }

    private void OpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileButtonActionPerformed
        int returnVal = DataFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            m_sFileName = DataFileChooser.getSelectedFile().getAbsolutePath();
            m_nLinesInFile = 0;
            m_nLinesInFile = getNumberofLinesInFile();
            if (m_nLinesInFile == 0) {
                JOptionPane.showConfirmDialog(null, "File Open Error.", "Error Open File",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_OpenFileButtonActionPerformed

    private void NewPuzzleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPuzzleButtonActionPerformed
        if ((m_sFileName == null) || (m_sFileName.length() == 0)) {
            JOptionPane.showConfirmDialog(null, "Please open and select file first.", "Error New Puzzle",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return;
        }
        String line = getRandomLineFromFile().toUpperCase().trim();
        String[] tokens = line.split("[,]", -1);

        m_WhoWhat = tokens[0];

        m_Display = new char[2 * m_WhoWhat.length()];
        m_nClosed = 0;
        for (int i = 0; i < m_WhoWhat.length(); i++) {
            char tempChar = m_WhoWhat.charAt(i);
            if ((tempChar < 'A') || (tempChar > 'Z')) {
                m_Display[2 * i] = tempChar;
            } else {
                m_Display[2 * i] = '_';
                m_nClosed++;
            }
            m_Display[2 * i + 1] = ' ';
        }

        OutputLabel.setText(new String(m_Display));

        if (tokens.length >= 2) {
            HintLabel.setText("CATEGORY: " + tokens[1]);
        } else {
            HintLabel.setText("");
        }
        
        m_nTries = 0;
    }//GEN-LAST:event_NewPuzzleButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        if (m_nClosed == 0) {
            return;
        }
        
        String inWord = InputTextBox.getText().toUpperCase().trim();
        if (inWord.length() == 0) {
            return;
        }
        
        char inChar = inWord.charAt(0);
        if ((inChar < 'A') || (inChar > 'Z')) {
                return;
        }
        
        for (int i = 0; i < m_WhoWhat.length(); i++) {
            if ((m_Display[2 * i] == '_') && (inChar == m_WhoWhat.charAt(i))) {
                m_Display[2 * i] = inChar;
                m_nClosed--;
            }
        }
        
        OutputLabel.setText(new String(m_Display));
        m_nTries++;
        
        if (m_nClosed == 0) {
            JOptionPane.showConfirmDialog(null, "You got it in " + m_nTries + " tries!", "OK Information", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_OKButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void mainApp(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuessWho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuessWho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuessWho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuessWho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GuessWho().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser DataFileChooser;
    private javax.swing.JLabel HintLabel;
    private javax.swing.JTextField InputTextBox;
    private javax.swing.JButton NewPuzzleButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton OpenFileButton;
    private javax.swing.JLabel OutputLabel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
